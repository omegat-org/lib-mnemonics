plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.github.spotbugs' version '6.0.16'
    id("io.github.gradle-nexus.publish-plugin") version "1.3.0"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
    withSourcesJar()
    withJavadocJar()
}

version = '1.2'
group = 'org.omegat'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
}

test {
    useJUnit()
    // Test in headless mode with ./gradlew test -Pheadless
    if (project.hasProperty('headless') || System.getenv("CI")) {
        systemProperty 'java.awt.headless', 'true'
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test/src'
        }
        resources {
            srcDir 'test/src'
            srcDir 'test/data'
        }
    }
}

tasks.check.dependsOn(javadoc)

jar {
    manifest {
        attributes('Automatic-Module-Name': 'org.omegat.mnemonics')
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

spotbugsMain {
    reports {
        html {
            required = true
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'org.omegat'
            artifactId = 'lib-mnemonics'
            from components.java

            pom {
                name = 'OmegaT'
                description = 'The free translation memory tool'
                url = 'https://omegat.org'
                scm {
                    connection = "scm:git:https://github.com/omegat-org/lib-mnemonics/"
                    developerConnection = "scm:git:https:/github.com/omegat-org/lib-mnemonics/"
                    url = "https://github.com/omegat-org/lib-mnemonics/"
                }
                licenses {
                    license {
                        name = 'The GNU General Public License, Version 3.0'
                        url = 'https://www.gnu.org/licenses/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'omegat'
                        name = 'OmegaT Developers'
                        email = 'info@omegat.org'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    if (!findProperty("signing.keyId")) {
        useGpgCmd()
    }
}

def sonatypeUsername = project.hasProperty("sonatypeUsername")? project.property('sonatypeUsername').toString() : System.getenv('SONATYPE_USER')
def sonatypePassword = project.hasProperty("sonatypePassword")? project.property('sonatypePassword').toString() : System.getenv('SONATYPE_PASS')
if (sonatypeUsername != null && sonatypePassword != null) {
    nexusPublishing.repositories{
        sonatype {
            nexusUrl.set(new URI("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(new URI("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username.set(sonatypeUsername)
            password.set(sonatypePassword)
        }
    }
}

tasks.sourcesJar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
